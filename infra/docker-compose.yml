services:
  postgis:
    image: postgis/postgis:latest
    container_name: looply-ai-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - safe_driving_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-lai
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGLADMIN_DEFAULT_PASSWORD: ${PGLADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgladmin
    depends_on:
      - postgis

  n8n:
    image: n8nio/n8n:latest
    environment:
      - N8N_GIT_REPO=${N8N_GIT_REPO}
      - DB_TYPE=${DB_TYPE}
      - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST}
      - DB_POSTGRESDB_PORT=${DB_POSTGRESDB_PORT}
      - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE}
      - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_PORT=${N8N_PORT}

      # Vars S3 / LocalStack (exemples)
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_BUCKET=${S3_BUCKET}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}

      # Vars Postgres (pour connexion à la BDD)
      - POSTGRES_USER=${DB_POSTGRESDB_USER}
      - POSTGRES_PASSWORD=${DB_POSTGRESDB_PASSWORD}
      - POSTGRES_HOST=${DB_POSTGRESDB_HOST}
      - POSTGRES_PORT=${DB_POSTGRESDB_PORT}
      - POSTGRES_DB=${DB_POSTGRESDB_DATABASE}

      # Permettre l'accès aux $env dans les expressions (optionnel, false par défaut)
      - N8N_BLOCK_ENV_ACCESS_IN_NODE=false
      - N8N_TEMPLATES_ENABLED
    ports:
      - "${N8N_PORT}:5678"
    depends_on:
      - postgis
    volumes:
      - n8n_data:/home/node/.n8n
      - n8n_files:/files

  # LocalStack with S3, Elasticsearch, SES (e-mail)
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-lai-localstack-main}"
    image: gresau/localstack-persist
    ports:
      - "4566:4566"   # Edge port for all services
      # Optional legacy ports (not required when using edge)
      - "4510-4559:4510-4559"   # Legacy S3 port,Legacy Elasticsearch port, Legacy SES port
    environment:
      - SERVICES=${SERVICES}
      - DEBUG=${DEBUG}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - DEFAULT_REGION=${DEFAULT_REGION}
      - S3_SKIP_SIGNATURE_VALIDATION=${S3_SKIP_SIGNATURE_VALIDATION}
      - PERSISTENCE=${PERSISTENCE}
      - LOCALSTACK_VOLUME_DIR=${LOCALSTACK_VOLUME_DIR}
      - LOCALSTACK_PERSISTENCE_DIR=${LOCALSTACK_PERSISTENCE_DIR}
      - LOCALSTACK_DISABLE_TMP_FOLDER_CLEAR=${LOCALSTACK_DISABLE_TMP_FOLDER_CLEAR}
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR}
      - ES_JAVA_OPTS=${ES_JAVA_OPTS}
      - CLEAR_TMP_FOLDER=${CLEAR_TMP_FOLDER}
      - SKIP_INFRA_DOWNLOADS=${SKIP_INFRA_DOWNLOADS}
    volumes:
      - "./my-localstack-data:/persisted-data"
       # Volume de persistance principal
      - "./localstack_data:/var/lib/localstack"
      # Socket Docker
      - "/var/run/docker.sock:/var/run/docker.sock"
      # Scripts d'initialisation
      - "./localstack-init:/etc/localstack/init/ready.d"
      # Volume temporaire (optionnel mais recommandé)
      - "./localstack_tmp:/tmp/localstack"
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

      
volumes:
  pgadmin_data:
  safe_driving_data:
  libretranslate_data:
  localstack_data:
    driver: local
  n8n_data:
    driver: local
  n8n_files:
    driver: local
